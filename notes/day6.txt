* 리터럴, 변수, 배열


컴퓨터에서 값(data)를 메모리로 보낼 때는 전기 신호롤 보냄 => on /off 를 표기하기에 2진법이 최적

	date --------------> RAM or HDD

 * "어떤 값이든 2진법으로 표현할 수 있으면 저장 가능"



-리터럴 -> 값을 표현한 것

		- 정수
			- 10진수 => 실생활에서 표현 -> 100
				ex)78

			- 2진수 -> 컴퓨터에 값을 보낼 때 이용!
				ex) 0100 1110 (=10진법으로 78)
		
			- 8진수 -> 2진수를 보기 쉽게 표현 (16진수를 더 선호) 
				ex)0100 1110 을 3자리씩 끊음
				->01 / 001 / 110
			 	  01 -> 0+1 = 1
			   	001 -> 0+0+1 = 1
			  	 110 -> 4+2+0 = 6
					=116

			- 16진수 -> 2진수를 보기 쉽게 표현 
				ex) 0100 1110을 4자리씩 끊음
			    	 0100 / 1110 
			     	0100 -> 4
			     	1110 -> 8+4+2+0 =14 =E (16진법에서 10 = A , 11 = B, 12 = C ... 15 = F )
					=4E

		* bit & byte

		1bit => 2진법 1개가 들어갈 한 자리

		8bit = 1Byte

		1bit -> 값의 개수는 2의1승 =2
		          값의 범위는 2의1승 -1 =1

		4bit -> 값의 개수는 2의4승 = 16
		          값의 범위는 2의4승-1 = 15
		
			-> 현실에서는 음수도 반드시 표현할 수 있어야 함

		음수표현 -> 2진수 규칙

			1) sign-magnitude (부호절대값) 
				->가장 왼쪽 비트를 부호 표시하는데 이용 (0 = +, 1= - )
				
					But, 비트 낭비라 비중 없음

			2) 1의 보수
				-> 양수의 모든 비트를 뒤집음
					ex) 4 => 0100
					     -4 =>1011

					But, 계산 불편
			3) 2의 보수
				-> 1의 보수 -1
					ex) 4 =>0100
				   	 -4 = 1011 + 1
				         	=>1100

						가장 많이 쓰임!!

		*값과 메모리 크기
		
			1byte(8bit) => 0 ~ (2^8) -1 = 0 ~ 255 = -128 ~127
			2byte(16bit) => 0 ~ (2^16) -1 = 0 ~ 65535 = -32768 ~ 32767
			3byte(32bit) => 0 ~ (2^32) -1 = 0 ~ 4,294,967,295 = 약 - 21억 ~ 21억
			4byte(64bit) => 0 ~ (2^64) -1 = 0 ~ 약 1900경 = 약 -800경 ~ 800경 
    		   	   
	- 부동소수점 (e 대/소문자 다 가능)
		-> 3.14 = 31.4e-1 = 314e-2
		           = 0.314e1 = 0.0314e2

	- 논리
		- true
		- false 

	- 문자( ' ' )
		'A' , '가', ..
		'\n' (이스케이프 문자)	

	- 문자열( " " )
		"가나다" , "ABCD" ...
		"\n" (이스케이프 문자)

* 콘솔출력
	System.out.print(값이나 표현식); => 값 출력
	System.out.println(값이나 표현식); => 값 출력 후 줄바꿈
	System.out.printf("출력형식",값,값,...); =>출력형식을 정한 후 넣을 값을 나열 => ex) System.out.printf("팀원 : "%s%n", "홍길동, 가나다, 라마바, 사아자")
	
-변수 -> 값을 담을 메모리

- 배열 -> 여러 개의 값을 담을 메모리 / 변수 목록